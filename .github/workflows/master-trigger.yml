name: pipeline-master
on:
  push:
    branches:
      - 'master'

jobs:
  checking_template_update:
    runs-on: 'ubuntu-20.04'
    # Declare outputs for next jobs
    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Checkout as many commits as needed for the diff
        fetch-depth: 2
    - shell: bash
      id: check_file_changed
      name: Check for any updates in projects folder
      run: |
        export diff=$(git diff --name-only HEAD^ HEAD)
        export updated="projects/"

        for i in $diff; do
          if [[ "$i" == "$updated"* ]]; then
            echo "::set-output name=docs_changed::True"
            exit 0
          else
            echo $i
          fi
        done

  send_venv:
    runs-on: 'ubuntu-20.04'
    needs: [ checking_template_update ]
    # if: needs.checking_template_update.outputs.docs_changed == 'True'
    steps:
    - name: Save current directory
      uses: actions/checkout@v3
      with:
        path: 'src'
        ref: master
        persist-credentials: false

    - name: Get ansible directory
      uses: actions/checkout@v3
      with:
        path: 'dest'
        ref: master
        persist-credentials: true
        repository: 'Natannegara/config-management'
        token: '${{ secrets.REPO_TOKEN }}'
        fetch-depth: 0

    - name: copy src to dest
      shell: bash
      run: |
        mkdir -p dest/config-management/roles/install-dep/templates
        cp -r src/projects/* dest/config-management/roles/install-dep/templates

    - name: Check an Update
      id: newFiles
      shell: bash
      working-directory: dest
      run: |
        git ls-files --others --exclude-standard
        for i in $(find config-management/roles/install-dep/templates/ -type f - name '*.txt'); do
          git add $i
        done
        git commit -m "maint: New Update ${{ github.event }}"
        git ls-files --others --exclude-standard

        echo "::set-output name=hasNewFiles::true"

        # git status --porcelain | wc -l
        # if [[ $(git status --porcelain | wc -l ) -gt 0]]; then
        #   echo "::set-output name=hasNewFiles::true"
        # else
        #   echo "::set-output name=hasNewFiles::false"
        # fi

    - name: Push an Update
      if: ${{ steps.newFiles.outputs.hasNewFiles == 'true' }}
      shell: bash
      working-directory: dest
      run: |
        git ls-files --others --exclude-standard
        git config --global user.name "${{ secrets.RUNNER_USER }}"
        git config --global user.email "${{ secrets.RUNNER_EMAIL }}"
        # git commit -m "maint: New Update ${{ github.event }}"
        git push


    # - uses: convictional/trigger-workflow-and-wait@v1.3.0
    #   name: Triggering to Ansible
    #   with:
    #     owner: Natannegara
    #     repo: config-management
    #     github_token: ${{ secrets.REPO_TOKEN }}
    #     workflow_file_name: config-management.yml
    #     ref: master

